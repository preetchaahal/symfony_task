<?php
namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository as EntityRepository;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends EntityRepository
{
	/*
	*	Assumed 1-level category-sub-category relation
	*	Current arrangements include a pranet_id column,
	*	that points to the unique id of the parent, whereas
	*	parent_id = 0 ; indicates the category is a primary 
	*	category.	
	*	Multi-level can be applied using tree traversal
	*	
	*/
	public function findAllCategoriesAndSubCategories()
	{
		$primaryCategories = self::findAllPrimaryCategories();
		$catWithChildren = array();
		
		foreach ($primaryCategories as $value) {
			$subcatArr = array();
			$subcat = self::findAllChildCategories($value->getId());
			
			foreach ($subcat as $val) {
				$subcatArr[] = array(
					'id'	=>    $val->getId(),
					'name'	=>	  $val->getName(),
					'status'=>	  $val->getStatus()	
				);	
			}

			$catWithChildren[] = array(
				'id'			=>		$value->getId(),
				'name'			=>		$value->getName(),
				'status'		=>		$value->getStatus(),
				'subcat'		=>		$subcatArr
			);
		}

		return $catWithChildren;
	}

	public function findAllPrimaryCategories()
	{
		return $this->getEntityManager()
            ->createQuery(
                'SELECT p FROM AppBundle:Category p WHERE p.parentId = 0 ORDER BY p.name ASC'
            )
            ->getResult();
	}

	public function findAllChildCategories($parent_id)
	{
		return $this->getEntityManager()
            ->createQuery(
                "SELECT p FROM AppBundle:Category p WHERE p.parentId = $parent_id ORDER BY p.name ASC")
            ->getResult();
	}
}